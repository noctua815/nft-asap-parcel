{"mappings":"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","sources":["src/js/old-js.js"],"sourcesContent":["// OLD SCRIPTS\n\nconst mobileMenuActivation = () => {\n  const btn = document.getElementById('menu-btn')\n  const menu = document.getElementById('mobile-menu')\n  \n  const classes = {\n    btn: 'menu-btn--active',\n    menu: 'mobile-menu--active',\n    body: 'disable-scroll'\n  }\n  if (!btn || !menu) return\n  \n  btn.addEventListener('click', () => {\n    if (btn.classList.contains(classes.btn)) {\n      btn.classList.remove(classes.btn)\n      menu.classList.remove(classes.menu)\n      document.body.classList.remove(classes.body)\n    } else {\n      btn.classList.add(classes.btn)\n      menu.classList.add(classes.menu)\n      document.body.classList.add(classes.body)\n    }\n  })\n}\n\nclass Slider {\n  constructor(sliderDom) {\n    this.slider = sliderDom\n    this.slides = this.slider.querySelectorAll('.slide')\n    this.sliderWrapper = this.slider.querySelector('.slider__wr')\n    this.sliderScroll = this.slider.querySelector('.slider__scroll')\n    this.leftBtn = this.slider.querySelector('.slider__btn--left')\n    this.rightBtn = this.slider.querySelector('.slider__btn--right')\n    this.leftFader = this.slider.querySelector('.slider__fader--left')\n    this.rightFader = this.slider.querySelector('.slider__fader--right')\n    this.activeElement = 0\n    this.nextElement = 1\n    this.prevElement = 0\n    this.classes = {\n      btn: 'slider__btn--hidden',\n      fader: 'slider__fader--hidden'\n    }\n    this.sliderEnd = false\n    this.initEvents()\n  }\n  \n  initEvents() {\n    this.leftBtn.addEventListener('click', evt => this.slideLeft(evt))\n    this.rightBtn.addEventListener('click', evt => this.slideRight(evt))\n  }\n  \n  getGapWidth(el) {\n    const elRect = el.getBoundingClientRect()\n    const nextItem = el.nextElementSibling\n    const nextItemRect = nextItem.getBoundingClientRect()\n    \n    return nextItemRect.x - elRect.width - elRect.x\n  }\n  \n  slideLeft() {\n    const prevSlide = this.slides[this.prevElement]\n    const wrapperRect = this.sliderScroll.getBoundingClientRect()\n    const slideRect = prevSlide.getBoundingClientRect()\n    const gap = this.getGapWidth(prevSlide)\n    const offset = slideRect.width + gap\n    const wrapperMatrix = new WebKitCSSMatrix(this.sliderWrapper.style.transform)\n    let finalOffset = (Math.abs(wrapperMatrix.m41) - offset) * -1\n    if (this.sliderEnd) {\n      if (slideRect.x !== wrapperRect.x) {\n        const diff = Math.abs(slideRect.x - wrapperRect.x)\n        finalOffset = (Math.abs(wrapperMatrix.m41) - diff) * -1\n      }\n    }\n    this.sliderWrapper.style.transform = `translateX(${ finalOffset }px)`\n    this.activeElement = this.prevElement\n    this.prevElement = this.prevElement - 1 > 0 ? this.prevElement - 1 : 0\n    this.nextElement = this.activeElement + 1\n    \n    if (this.activeElement === 0) {\n      this.leftBtn.classList.add(this.classes.btn)\n      this.leftFader.classList.add(this.classes.fader)\n    } else {\n      this.leftBtn.classList.remove(this.classes.btn)\n      this.leftFader.classList.remove(this.classes.fader)\n    }\n    \n    this.rightBtn.classList.remove(this.classes.btn)\n    this.rightFader.classList.remove(this.classes.fader)\n    this.sliderEnd = false\n  }\n  \n  slideRight() {\n    if (this.nextElement + 1 >= this.slides.length) return\n    \n    const nextSlide = this.slides[this.nextElement]\n    const wrapperRect = this.sliderScroll.getBoundingClientRect()\n    const slideRect = nextSlide.getBoundingClientRect()\n    const lastSlideRect = this.slides[this.slides.length - 1].getBoundingClientRect()\n    const offset = Math.abs(slideRect.x) - wrapperRect.x\n    const wrapperMatrix = new WebKitCSSMatrix(this.sliderWrapper.style.transform)\n    let finalOffset = wrapperMatrix.m41 - offset\n    const lastSlideOffset = lastSlideRect.x + lastSlideRect.width - wrapperRect.x\n    \n    if (lastSlideOffset - Math.abs(offset) <= wrapperRect.width) {\n      let diff = lastSlideOffset - wrapperRect.width - offset\n      finalOffset = finalOffset + Math.abs(diff)\n      this.sliderEnd = true\n    }\n    \n    this.prevElement = this.activeElement\n    this.activeElement = this.nextElement\n    this.nextElement++\n    this.sliderWrapper.style.transform = `translateX(${ finalOffset }px)`\n    \n    if (this.sliderEnd) {\n      this.rightBtn.classList.add(this.classes.btn)\n      this.rightFader.classList.add(this.classes.fader)\n    } else {\n      this.rightBtn.classList.remove(this.classes.btn)\n      this.rightFader.classList.remove(this.classes.fader)\n    }\n    \n    this.leftBtn.classList.remove(this.classes.btn)\n    this.leftFader.classList.remove(this.classes.fader)\n  }\n}\n\nconst startSlider = () => {\n  const sliders = document.querySelectorAll('.slider')\n  if (!sliders.length) return\n  \n  for (let item of sliders) {\n    const slider = new Slider(item)\n  }\n}\n\nconst wordAnimation = () => {\n  const words = document.querySelectorAll('.anim-word')\n  if (!words.length) return\n  \n  let count = words.length\n  let activeEl = 0\n  let nextEl\n  const intervalTime = 5000\n  const animationTime = 500\n  \n  words[activeEl].classList.add('anim-word--active')\n  \n  const interval = setInterval(() => {\n    if (activeEl + 1 >= count) {\n      nextEl = 0\n    } else {\n      nextEl = activeEl + 1\n    }\n    \n    words[activeEl].classList.remove('anim-word--show')\n    words[activeEl].classList.add('anim-word--hide')\n    \n    setTimeout(() => {\n      words[activeEl].classList.remove('anim-word--hide', 'anim-word--active')\n      words[nextEl].classList.add('anim-word--show')\n      activeEl = nextEl\n    }, animationTime)\n    \n  }, intervalTime)\n}\n\nwordAnimation()\nmobileMenuActivation()\nstartSlider()\n"],"names":["mobileMenuActivation","btn","document","getElementById","menu","classes","addEventListener","classList","contains","remove","body","add","Slider","constructor","sliderDom","this","slider","slides","querySelectorAll","sliderWrapper","querySelector","sliderScroll","leftBtn","rightBtn","leftFader","rightFader","activeElement","nextElement","prevElement","fader","sliderEnd","initEvents","evt","slideLeft","slideRight","getGapWidth","el","elRect","getBoundingClientRect","nextElementSibling","x","width","prevSlide","wrapperRect","slideRect","gap","offset","wrapperMatrix","WebKitCSSMatrix","style","transform","finalOffset","Math","abs","m41","diff","length","nextSlide","lastSlideRect","lastSlideOffset","startSlider","sliders","item","wordAnimation","words","nextEl","count","activeEl","setInterval","setTimeout"],"version":3,"file":"catalog.6ca8b9a4.js.map"}